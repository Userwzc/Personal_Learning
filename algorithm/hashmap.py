# 哈希表
# 关键概念
# key是唯一的， value可以重复, 类比数组，数组里的每个索引都是唯一的，不可能说有两个相同的索引
# 哈希函数： 把任意产长度的输入(key)转化为固定长度的输出（索引）
# 增删改查方法中都会用到哈希函数来计算索引，因此这个函数的性能很重要
# f: key -> hash(key) -> index  ,输入相同的key,输出也必须要相同,这样才能保证哈希表的正确性
# int hash(K key) {
#     int h = key.hashCode();
#     //保证非负数
#     h = h & 0x7fffffff;
#     //映射到table数组的合法索引
#     return h % table.length;
# }

# 哈希冲突
# 常见解决方法，拉链法和开放寻址法（线性探查法）
# 对应纵向延伸和横向延伸两种思路

 
# 扩容和负载因子（避免哈希表装的太满）
# size/capacity = load factor

